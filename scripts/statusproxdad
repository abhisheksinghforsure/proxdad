#!/bin/bash
# 
# statusproxdad script | MIT License
# 
# This script checks whether proxy details are applied to the system environment.
# 
#
# It defines two functions: is_proxdad_on, which examines if the proxy details 
# are present in the /etc/environment file, and get_proxdad_status, which 
# retrieves and formats the proxy host and port if the proxy is enabled. 
# The script also verifies if it's executed directly and if so, it calls 
# get_proxdad_status to obtain and display the proxy details along with 
# indicating whether "ProxDad" (proxy) is on or off. It essentially serves as 
# a tool to check and report the status of a proxy configuration on the system.
# 
# 
# Copyright (C) 2024 Abhishek Singh
# 

# Check if the script is run by root
if [ "$(id -u)" = "0" ]; then
    echo "DON'T run as root."
    exit 1
fi

# Check if proxy details is applied to environment
is_proxdad_on() {
    if grep -q "http_proxy" "/etc/environment"; then
        return 0  # Yes, ProxDad is ON
    else
        return 1  # No, ProxDad is OFF
    fi
}

get_proxdad_status() {
    if is_proxdad_on; then
        # Get proxy details from environment variables
        proxy_var=$(grep -E "http_proxy" "/etc/environment")

        # Extract host and port using awk
        proxy_host=$(echo "$proxy_var" | awk -F '[@:]' '{print $4}')
        proxy_port=$(echo "$proxy_var" | awk -F '[@:]' '{print $5}')

        echo "$proxy_host:$proxy_port"
    fi
}

# Check if the script is being executed directly
if [ "$0" = "$BASH_SOURCE" ]; then
    # The script is executed directly, so call get_proxy_details
    proxdad_status=$(get_proxdad_status)

    if [ -n "$proxdad_status" ]; then
        echo "$proxdad_status"
        echo "ProxDad is ON"
    else
        echo "ProxDad is OFF"
    fi
fi
